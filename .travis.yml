language: python
python:
  - 3.6
  - 3.7
  - 3.8


branches:
  only:
  - master
  
os:
  - linux
  - osx

addons:
  apt:
    packages:
    - doxygen

matrix:
  include:
  - os: linux
    language: generic
    compiler: gcc
    dist: bionic
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - libhdf5-dev
        - libeigen3-dev
        - doxygen
        - lcov
    env: BUILD_TYPE='release'
    
before_install:
- pip3 install --upgrade pip
- sudo pip3 install codecov
- cd opencap; mkdir build
- cd build
- cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo .. 

install:
- cmake --build . --config Debug 
- ctest --output-on-failure
- cd ../../
- pip3 install pytest-cov
- pip3 install h5py
- pip3 install numpy
- pip3 install pyscf
- pip install .
- cd pyopencap
- py.test --cov-report=xml --cov=pyopencap tests
- cd ..

script:
- cd dox; doxygen Doxyfile.in; cd ..

after_success:
  # Create lcov report
  # capture coverage info
  - cd opencap/build
  - lcov   --directory . --capture --output-file coverage.info 
  # Remove everything not OpenCAP'
  - lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info 
  - lcov --remove coverage.info '*eigen*' "${HOME}"'/.cache/*' --output-file coverage.info 
  - lcov --remove coverage.info '*_deps*' "${HOME}"'/.cache/*' --output-file coverage.info 
  - lcov --remove coverage.info '*tests*' "${HOME}"'/.cache/*' --output-file coverage.info 
  # output coverage data for debugging (optional)
  - lcov --list coverage.info
  # Uploading to CodeCov
  # '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage C++ reports"
  - cd ../../pyopencap
  - bash <(curl -s https://codecov.io/bash) -f coverage.xml || echo "Codecov did not collect coverage Python reports"

deploy:
  provider: pages
  skip_cleanup: true
  local_dir: doxygen_docs
  github_token: $GH_REPO_TOKEN
  on:
    branch: master
    
