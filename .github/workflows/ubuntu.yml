name: ubuntu

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          auto-activate-base: true
          activate-environment: true
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libhdf5-serial-dev libeigen3-dev lcov doxygen software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get install -y cmake

      - name: Build and test OpenCAP (C++)
        run: |
          cd opencap
          mkdir -p build && cd build
          cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
          make -j$(nproc)
          ctest --output-on-failure
          cd ../../

      - name: Build and test PyOpenCAP (Python)
        run: |
          conda install -c psi4/label/dev psi4 -y
          pip install pytest pytest-cov h5py numpy pyscf codecov numgrid pandas
          pip install .
          cd pyopencap
          pytest --cov=pyopencap --cov-report=xml
          cd ..

      - name: Upload coverage reports
        run: |
          # C++ coverage
          cd opencap/build
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' '*eigen*' '*_deps*' '*tests*' --output-file coverage.info
          lcov --list coverage.info
          bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect C++ reports"
          cd ../../pyopencap
          # Python coverage
          bash <(curl -s https://codecov.io/bash) -f coverage.xml || echo "Codecov did not collect Python reports"
