name: build-wheels

on: [push, pull_request]

jobs:
  build-wheels-linux-x86_64:
    name: Build wheels on Ubuntu (x86_64)
    runs-on: ubuntu-22.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build wheels (x86_64)
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_BEFORE_ALL_LINUX: >
            yum install -y eigen3-devel &&
            yum install -y wget &&
            wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/hdf5-1.12.1.tar.gz &&
            tar zxvf hdf5-1.12.1.tar.gz &&
            cd hdf5-1.12.1 &&
            ./configure --prefix=/opt/rh/devtoolset-10/root/usr/ --enable-cxx &&
            make &&
            make install &&
            yum install -y python3-devel && 
            cd ..
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"

      - name: Upload built wheels (x86_64)
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-x86_64
          path: ./wheelhouse/*.whl

  build-wheels-linux-aarch64:
    name: Build wheels on Ubuntu (aarch64)
    runs-on: ubuntu-22.04-arm64

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build wheels (aarch64)
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ARCHS_LINUX: "aarch64"
          CIBW_BEFORE_ALL_LINUX: >
            yum install -y eigen3-devel &&
            yum install -y wget &&
            wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/hdf5-1.12.1.tar.gz &&
            tar zxvf hdf5-1.12.1.tar.gz &&
            cd hdf5-1.12.1 &&
            ./configure --prefix=/opt/rh/devtoolset-10/root/usr/ --enable-cxx &&
            make &&
            make install &&
            yum install -y python3-devel && 
            cd ..
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"

      - name: Upload built wheels (aarch64)
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-aarch64
          path: ./wheelhouse/*.whl


  build-wheels-macos-14:
    name: Build wheels on macOS (arm mac)
    runs-on: macos-14

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_ARCHS_MACOS: "arm64"
          CIBW_BEFORE_ALL_MACOS: >
            brew install eigen gcc hdf5
          CIBW_ENVIRONMENT_MACOS: CC=gcc-14 CXX=g++-14 MACOSX_DEPLOYMENT_TARGET=14.0
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-arm64
          path: ./wheelhouse/*.whl

  build-wheels-macos-13:
    name: Build wheels on macOS-13 (intel mac)
    runs-on: macos-13

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_ARCHS_MACOS: "x86_64"
          CIBW_BEFORE_ALL_MACOS: >
            brew install eigen gcc hdf5
          CIBW_ENVIRONMENT_MACOS: CC=gcc-14 CXX=g++-14 MACOSX_DEPLOYMENT_TARGET=13.0
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-x86_64
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make sdist
    runs-on: ubuntu-22.04

    steps:
      - name: Check out source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tools and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libhdf5-serial-dev libeigen3-dev cmake
          python -m pip install --upgrade pip
          pip install build

      - name: Build source distribution
        run: python -m build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
